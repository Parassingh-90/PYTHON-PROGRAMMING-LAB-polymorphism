import math

def polymorphism(obj):
    print(obj.getArea())

class Circle:
    def __init__(self,radius):
        self.radius=radius
    def getArea(self):
        area=math.pi*self.radius**2
        return area
class Rectangle:
    def __init__(self,length,breadth):
        self.length=length
        self.breadth=breadth
    def getArea(self):        
        area=self.length*self.breadth
        return area
class Triangle:
    def __init__(self,side1,side2,side3):
        self.side1=side1
        self.side2=side2
        self.side3=side3
    def getArea(self):
        p=(self.side1+self.side2+self.side3)/2
        area=(p*(p-self.side1)*(p-self.side2)*(p-self.side3))**(1/2)
        return area
    
lt=list(map(int,input().split()))
if len(lt)==1:
    ob1=Circle(lt[0])
    polymorphism(ob1)
elif len(lt)==2:
    ob2=Rectangle(lt[0],lt[1])
    polymorphism(ob2)
elif len(lt)==3:
    ob3=Triangle(lt[0],lt[1],lt[2])
    polymorphism(ob3)
else:
    print("Error")
